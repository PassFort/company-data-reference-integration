# coding: utf-8

"""
    Thomson Reuters World-Check One API

    The World-Check One API enables developers to integrate the next generation of Thomson Reuters screening capabilities into existing workflows and internal systems (such as CRMs) in order to help streamline the processes for on-boarding, KYC and third party due diligence. The API provides, among other features: - The ability to screen entity names, with or without secondary fields such as date of birth for individuals. These names are called “cases” within the World-Check One system. - The ability to retrieve results of the screening process from the World-Check database - The ability to flag cases for Ongoing Screening, and retrieve the World-Check results from the Ongoing Screening process. > © 2017 Thomson Reuters. All rights reserved. Republication or redistribution of Thomson Reuters content, including by framing or similar means, is prohibited without the prior written consent of Thomson Reuters. 'Thomson Reuters' and the Thomson Reuters logo are registered trademarks and trademarks of Thomson Reuters and its affiliated companies.   # noqa: E501

    OpenAPI spec version: 1.2.0
    Contact: Thomson-FCR.PS@Thomsonreuters.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from swagger_client.models.abstract_audit_details import AbstractAuditDetails  # noqa: F401,E501
from swagger_client.models.case_entity_type import CaseEntityType  # noqa: F401,E501
from swagger_client.models.gender import Gender  # noqa: F401,E501
from swagger_client.models.organisation_secondary_fields import OrganisationSecondaryFields  # noqa: F401,E501


class EDDRequestAuditDetails(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'entity_type': 'CaseEntityType',
        'case_system_id': 'str',
        'case_name': 'str',
        'case_country': 'str',
        'gender': 'Gender',
        'date_of_birth': 'date',
        'place_of_birth': 'str',
        'nationality': 'str',
        'organisation_secondary_fields': 'OrganisationSecondaryFields',
        'title': 'str',
        'first_name': 'str',
        'last_name': 'str',
        'job_title': 'str',
        'job_category': 'str',
        'job_level': 'str',
        'company_name': 'str',
        'email': 'str',
        'phone': 'str',
        'fax': 'str',
        'full_address': 'str',
        'country': 'str',
        'additional_info': 'str'
    }

    attribute_map = {
        'entity_type': 'entityType',
        'case_system_id': 'caseSystemId',
        'case_name': 'caseName',
        'case_country': 'caseCountry',
        'gender': 'gender',
        'date_of_birth': 'dateOfBirth',
        'place_of_birth': 'placeOfBirth',
        'nationality': 'nationality',
        'organisation_secondary_fields': 'organisationSecondaryFields',
        'title': 'title',
        'first_name': 'firstName',
        'last_name': 'lastName',
        'job_title': 'jobTitle',
        'job_category': 'jobCategory',
        'job_level': 'jobLevel',
        'company_name': 'companyName',
        'email': 'email',
        'phone': 'phone',
        'fax': 'fax',
        'full_address': 'fullAddress',
        'country': 'country',
        'additional_info': 'additionalInfo'
    }

    def __init__(self, entity_type=None, case_system_id=None, case_name=None, case_country=None, gender=None, date_of_birth=None, place_of_birth=None, nationality=None, organisation_secondary_fields=None, title=None, first_name=None, last_name=None, job_title=None, job_category=None, job_level=None, company_name=None, email=None, phone=None, fax=None, full_address=None, country=None, additional_info=None):  # noqa: E501
        """EDDRequestAuditDetails - a model defined in Swagger"""  # noqa: E501

        self._entity_type = None
        self._case_system_id = None
        self._case_name = None
        self._case_country = None
        self._gender = None
        self._date_of_birth = None
        self._place_of_birth = None
        self._nationality = None
        self._organisation_secondary_fields = None
        self._title = None
        self._first_name = None
        self._last_name = None
        self._job_title = None
        self._job_category = None
        self._job_level = None
        self._company_name = None
        self._email = None
        self._phone = None
        self._fax = None
        self._full_address = None
        self._country = None
        self._additional_info = None
        self.discriminator = None

        if entity_type is not None:
            self.entity_type = entity_type
        if case_system_id is not None:
            self.case_system_id = case_system_id
        if case_name is not None:
            self.case_name = case_name
        if case_country is not None:
            self.case_country = case_country
        if gender is not None:
            self.gender = gender
        if date_of_birth is not None:
            self.date_of_birth = date_of_birth
        if place_of_birth is not None:
            self.place_of_birth = place_of_birth
        if nationality is not None:
            self.nationality = nationality
        if organisation_secondary_fields is not None:
            self.organisation_secondary_fields = organisation_secondary_fields
        if title is not None:
            self.title = title
        if first_name is not None:
            self.first_name = first_name
        if last_name is not None:
            self.last_name = last_name
        if job_title is not None:
            self.job_title = job_title
        if job_category is not None:
            self.job_category = job_category
        if job_level is not None:
            self.job_level = job_level
        if company_name is not None:
            self.company_name = company_name
        if email is not None:
            self.email = email
        if phone is not None:
            self.phone = phone
        if fax is not None:
            self.fax = fax
        if full_address is not None:
            self.full_address = full_address
        if country is not None:
            self.country = country
        if additional_info is not None:
            self.additional_info = additional_info

    @property
    def entity_type(self):
        """Gets the entity_type of this EDDRequestAuditDetails.  # noqa: E501


        :return: The entity_type of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: CaseEntityType
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this EDDRequestAuditDetails.


        :param entity_type: The entity_type of this EDDRequestAuditDetails.  # noqa: E501
        :type: CaseEntityType
        """

        self._entity_type = entity_type

    @property
    def case_system_id(self):
        """Gets the case_system_id of this EDDRequestAuditDetails.  # noqa: E501

        System generated ID for the Case  # noqa: E501

        :return: The case_system_id of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._case_system_id

    @case_system_id.setter
    def case_system_id(self, case_system_id):
        """Sets the case_system_id of this EDDRequestAuditDetails.

        System generated ID for the Case  # noqa: E501

        :param case_system_id: The case_system_id of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._case_system_id = case_system_id

    @property
    def case_name(self):
        """Gets the case_name of this EDDRequestAuditDetails.  # noqa: E501


        :return: The case_name of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._case_name

    @case_name.setter
    def case_name(self, case_name):
        """Sets the case_name of this EDDRequestAuditDetails.


        :param case_name: The case_name of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._case_name = case_name

    @property
    def case_country(self):
        """Gets the case_country of this EDDRequestAuditDetails.  # noqa: E501


        :return: The case_country of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._case_country

    @case_country.setter
    def case_country(self, case_country):
        """Sets the case_country of this EDDRequestAuditDetails.


        :param case_country: The case_country of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._case_country = case_country

    @property
    def gender(self):
        """Gets the gender of this EDDRequestAuditDetails.  # noqa: E501


        :return: The gender of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: Gender
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this EDDRequestAuditDetails.


        :param gender: The gender of this EDDRequestAuditDetails.  # noqa: E501
        :type: Gender
        """

        self._gender = gender

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this EDDRequestAuditDetails.  # noqa: E501

        The 'date of birth' secondary field of the Case  # noqa: E501

        :return: The date_of_birth of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: date
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this EDDRequestAuditDetails.

        The 'date of birth' secondary field of the Case  # noqa: E501

        :param date_of_birth: The date_of_birth of this EDDRequestAuditDetails.  # noqa: E501
        :type: date
        """

        self._date_of_birth = date_of_birth

    @property
    def place_of_birth(self):
        """Gets the place_of_birth of this EDDRequestAuditDetails.  # noqa: E501


        :return: The place_of_birth of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._place_of_birth

    @place_of_birth.setter
    def place_of_birth(self, place_of_birth):
        """Sets the place_of_birth of this EDDRequestAuditDetails.


        :param place_of_birth: The place_of_birth of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._place_of_birth = place_of_birth

    @property
    def nationality(self):
        """Gets the nationality of this EDDRequestAuditDetails.  # noqa: E501


        :return: The nationality of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._nationality

    @nationality.setter
    def nationality(self, nationality):
        """Sets the nationality of this EDDRequestAuditDetails.


        :param nationality: The nationality of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._nationality = nationality

    @property
    def organisation_secondary_fields(self):
        """Gets the organisation_secondary_fields of this EDDRequestAuditDetails.  # noqa: E501


        :return: The organisation_secondary_fields of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: OrganisationSecondaryFields
        """
        return self._organisation_secondary_fields

    @organisation_secondary_fields.setter
    def organisation_secondary_fields(self, organisation_secondary_fields):
        """Sets the organisation_secondary_fields of this EDDRequestAuditDetails.


        :param organisation_secondary_fields: The organisation_secondary_fields of this EDDRequestAuditDetails.  # noqa: E501
        :type: OrganisationSecondaryFields
        """

        self._organisation_secondary_fields = organisation_secondary_fields

    @property
    def title(self):
        """Gets the title of this EDDRequestAuditDetails.  # noqa: E501

        Title of requester  # noqa: E501

        :return: The title of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EDDRequestAuditDetails.

        Title of requester  # noqa: E501

        :param title: The title of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def first_name(self):
        """Gets the first_name of this EDDRequestAuditDetails.  # noqa: E501

        First name of requester  # noqa: E501

        :return: The first_name of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this EDDRequestAuditDetails.

        First name of requester  # noqa: E501

        :param first_name: The first_name of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this EDDRequestAuditDetails.  # noqa: E501

        Last name of requester  # noqa: E501

        :return: The last_name of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this EDDRequestAuditDetails.

        Last name of requester  # noqa: E501

        :param last_name: The last_name of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._last_name = last_name

    @property
    def job_title(self):
        """Gets the job_title of this EDDRequestAuditDetails.  # noqa: E501

        Job title of requester  # noqa: E501

        :return: The job_title of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._job_title

    @job_title.setter
    def job_title(self, job_title):
        """Sets the job_title of this EDDRequestAuditDetails.

        Job title of requester  # noqa: E501

        :param job_title: The job_title of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._job_title = job_title

    @property
    def job_category(self):
        """Gets the job_category of this EDDRequestAuditDetails.  # noqa: E501

        Job category of requester  # noqa: E501

        :return: The job_category of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._job_category

    @job_category.setter
    def job_category(self, job_category):
        """Sets the job_category of this EDDRequestAuditDetails.

        Job category of requester  # noqa: E501

        :param job_category: The job_category of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._job_category = job_category

    @property
    def job_level(self):
        """Gets the job_level of this EDDRequestAuditDetails.  # noqa: E501

        Job level of requester  # noqa: E501

        :return: The job_level of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._job_level

    @job_level.setter
    def job_level(self, job_level):
        """Sets the job_level of this EDDRequestAuditDetails.

        Job level of requester  # noqa: E501

        :param job_level: The job_level of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._job_level = job_level

    @property
    def company_name(self):
        """Gets the company_name of this EDDRequestAuditDetails.  # noqa: E501

        Company name of requester  # noqa: E501

        :return: The company_name of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this EDDRequestAuditDetails.

        Company name of requester  # noqa: E501

        :param company_name: The company_name of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._company_name = company_name

    @property
    def email(self):
        """Gets the email of this EDDRequestAuditDetails.  # noqa: E501

        Email of requester  # noqa: E501

        :return: The email of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this EDDRequestAuditDetails.

        Email of requester  # noqa: E501

        :param email: The email of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._email = email

    @property
    def phone(self):
        """Gets the phone of this EDDRequestAuditDetails.  # noqa: E501

        Phone number of requester  # noqa: E501

        :return: The phone of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this EDDRequestAuditDetails.

        Phone number of requester  # noqa: E501

        :param phone: The phone of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def fax(self):
        """Gets the fax of this EDDRequestAuditDetails.  # noqa: E501

        Fax details of requester  # noqa: E501

        :return: The fax of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this EDDRequestAuditDetails.

        Fax details of requester  # noqa: E501

        :param fax: The fax of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._fax = fax

    @property
    def full_address(self):
        """Gets the full_address of this EDDRequestAuditDetails.  # noqa: E501

        Full address of requester  # noqa: E501

        :return: The full_address of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._full_address

    @full_address.setter
    def full_address(self, full_address):
        """Sets the full_address of this EDDRequestAuditDetails.

        Full address of requester  # noqa: E501

        :param full_address: The full_address of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._full_address = full_address

    @property
    def country(self):
        """Gets the country of this EDDRequestAuditDetails.  # noqa: E501

        Country of requester  # noqa: E501

        :return: The country of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this EDDRequestAuditDetails.

        Country of requester  # noqa: E501

        :param country: The country of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._country = country

    @property
    def additional_info(self):
        """Gets the additional_info of this EDDRequestAuditDetails.  # noqa: E501

        Additional info provided by requester  # noqa: E501

        :return: The additional_info of this EDDRequestAuditDetails.  # noqa: E501
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this EDDRequestAuditDetails.

        Additional info provided by requester  # noqa: E501

        :param additional_info: The additional_info of this EDDRequestAuditDetails.  # noqa: E501
        :type: str
        """

        self._additional_info = additional_info

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EDDRequestAuditDetails):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

default_setup: &default_setup
    - checkout
    - attach_workspace:
        at: workspace
    - add_ssh_keys:
        fingerprints:
            - "e4:b4:92:9b:6a:57:f5:8a:5d:ee:0a:29:b4:6a:cf:65"
    - run: sudo pip install pipenv

aliases:
    - &attach_to_workspace
        attach_workspace:
            at: workspace
    - &auth_ssh
        add_ssh_keys:
            fingerprints:
                - "e4:b4:92:9b:6a:57:f5:8a:5d:ee:0a:29:b4:6a:cf:65"
    - &setup_gcp
        run:
          name: Authenticate to GCP
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud config set compute/zone europe-west1-b
            gcloud config set project core-gearbox-112418
    - &unit
        steps:
            - checkout
            - *attach_to_workspace
            - *setup_gcp
            - setup_remote_docker:
                docker_layer_caching:
            - run: |
                export INTEGRATION=`cat workspace/integration_name`
                export VERSION=`git cat-file -p HEAD | head -c12 | tail -c7`
                gcloud docker -- pull eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION
            - run: |
                export INTEGRATION=`cat workspace/integration_name`
                export VERSION=`git cat-file -p HEAD | head -c12 | tail -c7`
                docker run eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION yarn run unit

job_aliases:
    - &e2e
        e2e:
            requires:
                - build
    - &deploy_staging
        deploy_integration_staging:
            requires:
                - e2e
                - unit_duedil
                - unit_onfido
                - unit_bvd
                - unit_worldcheck
            filters:
                branches:
                    only:
                        - staging
    - &deploy_production
        deploy_integration_production:
            requires:
                - e2e
                - unit
            filters:
                branches:
                    only:
                        - master


version: 2.0

jobs:
    set_integration_duedil:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo duedil > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_onfido:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo onfido > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_bvd:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo bvd > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_worldcheck:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo worldcheck > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    build:
        docker:
            - image: passfort/python-builder
        environment:
            - GITHUB_KEY_LOCATION: id_rsa_e4b4929b6a57f58a5dee0a29b46acf65
        steps:
            - checkout
            - *attach_to_workspace
            - *auth_ssh
            - *setup_gcp
            - setup_remote_docker:
                docker_layer_caching:
            - run: |
                pipenv --three
                pipenv install
                pipenv run python deploy.py -bs `cat workspace/integration_name` staging

    lint:
        docker:
            - image: passfort/python-builder
        steps:
            - checkout
            - *attach_to_workspace
            - run:
                name: Check For Error Handling
                command: |
                    cd `cat workspace/integration_name`
                    grep Raven src/*.py || exit 1

    unit_duedil:
        docker:
            - image: passfort/python-builder
        - *unit
        requires:
            - build

    unit_onfido:
        docker:
            - image: passfort/python-builder
        - *unit
        requires:
            - build

    unit_bvd:
        docker:
            - image: passfort/python-builder
        - *unit
        requires:
            - build

    unit_worldcheck:
        docker:
            - image: passfort/python-builder
        - *unit
        requires:
            - build
    e2e:
        docker:
            - image: passfort/python-builder
        steps:
            - checkout
            - *attach_to_workspace
            - *setup_gcp
            - setup_remote_docker:
                docker_layer_caching:
            - run: |
                export INTEGRATION=`cat workspace/integration_name`
                export VERSION=`git cat-file -p HEAD | head -c12 | tail -c7`
                gcloud docker -- pull eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION
                docker run --name integration -d eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION
            - run: docker exec integration yarn run e2e

    deploy_integration_staging:
        docker:
            - image: passfort/python-builder
        steps:
            - checkout
            - *attach_to_workspace
            - *auth_ssh
            - *setup_gcp
            - run: |
                pipenv --three
                pipenv install
                pipenv run python deploy.py -ds `cat workspace/integration_name` staging

    deploy_integration_production:
        docker:
            - image: passfort/python-builder
        steps:
            - checkout
            - *attach_to_workspace
            - *auth_ssh
            - *setup_gcp
            - run: |
                pipenv --three
                pipenv install
                pipenv run python deploy.py -ds `cat workspace/integration_name` production

workflows:
    version: 2

    duedil:
        jobs:
            - set_integration_duedil
            - build:
                requires:
                    - set_integration_duedil
            - unit_duedil
            - *e2e
            - *deploy_staging
            - *deploy_production
    onfido:
        jobs:
            - set_integration_onfido
            - build:
                requires:
                  - set_integration_onfido
            - unit_onfido
            - *e2e
            - *deploy_staging
            - *deploy_production

    bvd:
        jobs:
            - set_integration_bvd
            - build:
                requires:
                  - set_integration_bvd
            - unit_bvd
            - *e2e
            - *deploy_staging
            - *deploy_production

    worldcheck:
        jobs:
            - set_integration_worldcheck
            - build:
                requires:
                  - set_integration_worldcheck
            - unit_worldcheck
            - *e2e
            - *deploy_staging
            - *deploy_production
default_setup: &default_setup
    - checkout
    - attach_workspace:
        at: workspace
    - add_ssh_keys:
        fingerprints:
            - "e4:b4:92:9b:6a:57:f5:8a:5d:ee:0a:29:b4:6a:cf:65"
    - run: sudo pip install pipenv==2018.7.1


aliases:
    - &attach_to_workspace
        attach_workspace:
            at: workspace
    - &auth_ssh
        add_ssh_keys:
            fingerprints:
                - "e4:b4:92:9b:6a:57:f5:8a:5d:ee:0a:29:b4:6a:cf:65"
    - &setup_gcp
        run:
          name: Authenticate to GCP
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            gcloud config set compute/zone europe-west1-b
            gcloud config set project core-gearbox-112418
    - &build
      docker:
        - image: passfort/python-builder
      environment:
        - GITHUB_KEY_LOCATION: id_rsa_e4b4929b6a57f58a5dee0a29b46acf65
      steps:
        - checkout
        - *attach_to_workspace
        - *auth_ssh
        - *setup_gcp
        - setup_remote_docker:
            docker_layer_caching:
        - run: |
            sudo pip install pipenv==2018.5.18
            pipenv --three
            pipenv install
            pipenv run python deploy.py -bs `cat workspace/integration_name` staging
    - &unit
      docker:
        - image: passfort/python-builder
      steps:
        - checkout
        - *attach_to_workspace
        - *setup_gcp
        - setup_remote_docker:
            docker_layer_caching:
        - run:
            name: Update PATH and Define Environment Variable at Runtime
            command: |
              echo 'export INTEGRATION=$(cat workspace/integration_name)' >> $BASH_ENV
              echo 'export VERSION=$(git cat-file -p HEAD | head -c12 | tail -c7)' >> $BASH_ENV
              source $BASH_ENV
        - run: |
            gcloud docker -- pull eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION
        - run: |
            docker run --name unit_$INTEGRATION \
            -e CODECOV_TOKEN=$CODECOV_TOKEN \
            -e VCS_COMMIT_ID=$CIRCLE_SHA1 \
            -e VCS_BRANCH_NAME=$CIRCLE_BRANCH \
            -e CI_BUILD_ID=$CIRCLE_BUILD_NUM \
            eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION yarn run unit

    - &e2e
      docker:
        - image: passfort/python-builder
      steps:
        - checkout
        - *attach_to_workspace
        - *setup_gcp
        - setup_remote_docker:
            docker_layer_caching:
        - run:
            name: Update PATH and Define Environment Variable at Runtime
            command: |
              echo 'export INTEGRATION=$(cat workspace/integration_name)' >> $BASH_ENV
              echo 'export VERSION=$(git cat-file -p HEAD | head -c12 | tail -c7)' >> $BASH_ENV
              source $BASH_ENV
        - run: |
            gcloud docker -- pull eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION
            docker run -ti --name e2e_$INTEGRATION \
            -e INTEGRATION=$INTEGRATION \
            -e CODECOV_TOKEN=$CODECOV_TOKEN \
            -e VCS_COMMIT_ID=$CIRCLE_SHA1 \
            -e VCS_BRANCH_NAME=$CIRCLE_BRANCH \
            -e CI_BUILD_ID=$CIRCLE_BUILD_NUM \
            eu.gcr.io/core-gearbox-112418/integrations-$INTEGRATION:$VERSION \
            yarn run coverage

    - &deploy_staging_common
      docker:
          - image: passfort/python-builder
      steps:
          - checkout
          - *attach_to_workspace
          - *auth_ssh
          - *setup_gcp
          - run: |
              sudo pip install pipenv==2018.5.18
              pipenv --three
              pipenv install
              pipenv run python deploy.py -ds `cat workspace/integration_name` staging

    - &deploy_production_common
      docker:
          - image: passfort/python-builder
      steps:
          - checkout
          - *attach_to_workspace
          - *auth_ssh
          - *setup_gcp
          - run: |
              sudo pip install pipenv==2018.5.18
              pipenv --three
              pipenv install
              pipenv run python deploy.py -ds `cat workspace/integration_name` production

version: 2.0

jobs:
    set_integration_comply_advantage:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo comply_advantage > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_creditsafe:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo creditsafe > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_duedil:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo duedil > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_equifax:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo equifax > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_onfido:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo onfido > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_vsure:
        docker:
          - image: circleci/python
        steps:
          - run: mkdir -p workspace
          - run: echo vsure > workspace/integration_name
          - persist_to_workspace:
              root: workspace
              paths:
                  - integration_name

    set_integration_bvd:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo bvd > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_worldcheck:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo worldcheck > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    set_integration_trulioo:
        docker:
            - image: circleci/python
        steps:
            - run: mkdir -p workspace
            - run: echo trulioo > workspace/integration_name
            - persist_to_workspace:
                root: workspace
                paths:
                    - integration_name

    build_comply_advantage:
        <<: *build

    build_creditsafe:
        <<: *build

    build_duedil:
        <<: *build

    build_equifax:
        <<: *build

    build_onfido:
        <<: *build

    build_vsure:
        <<: *build

    build_bvd:
        <<: *build

    build_worldcheck:
        <<: *build

    build_trulioo:
        <<: *build

    lint:
        docker:
            - image: passfort/python-builder
        steps:
            - checkout
            - *attach_to_workspace
            - run:
                name: Check For Error Handling
                command: |
                    cd `cat workspace/integration_name`
                    grep Raven src/*.py || exit 1

    unit_comply_advantage:
        <<: *unit

    unit_creditsafe:
        <<: *unit

    unit_duedil:
        <<: *unit

    unit_equifax:
        <<: *unit

    unit_onfido:
        <<: *unit

    unit_vsure:
        <<: *unit

    unit_bvd:
        <<: *unit

    unit_worldcheck:
        <<: *unit

    unit_trulioo:
        <<: *unit

    e2e_comply_advantage:
      <<: *e2e

    e2e_duedil:
        <<: *e2e

    e2e_equifax:
        <<: *e2e

    e2e_onfido:
        <<: *e2e

    e2e_vsure:
        <<: *e2e

    e2e_bvd:
        <<: *e2e

    e2e_worldcheck:
        <<: *e2e

    deploy_comply_advantage_staging:
        <<: *deploy_staging_common

    deploy_creditsafe_staging:
      <<: *deploy_staging_common

    deploy_duedil_staging:
        <<: *deploy_staging_common

    deploy_equifax_staging:
        <<: *deploy_staging_common

    deploy_onfido_staging:
        <<: *deploy_staging_common

    deploy_vsure_staging:
        <<: *deploy_staging_common

    deploy_bvd_staging:
        <<: *deploy_staging_common

    deploy_worldcheck_staging:
        <<: *deploy_staging_common

    deploy_trulioo_staging:
        <<: *deploy_staging_common

    deploy_comply_advantage_production:
      <<: *deploy_production_common

    deploy_creditsafe_production:
      <<: *deploy_production_common

    deploy_duedil_production:
        <<: *deploy_production_common

    deploy_equifax_production:
        <<: *deploy_production_common

    deploy_onfido_production:
        <<: *deploy_production_common

    deploy_vsure_production:
        <<: *deploy_production_common

    deploy_bvd_production:
        <<: *deploy_production_common

    deploy_worldcheck_production:
        <<: *deploy_production_common

    deploy_trulioo_production:
        <<: *deploy_production_common

workflows:
    version: 2

    comply_advantage:
        jobs:
            - set_integration_comply_advantage
            - build_comply_advantage:
                requires:
                  - set_integration_comply_advantage
            - unit_comply_advantage:
                requires:
                  - build_comply_advantage
            - e2e_comply_advantage:
                requires:
                  - build_comply_advantage
            - deploy_comply_advantage_staging:
                requires:
                  - e2e_comply_advantage
                  - unit_comply_advantage
                filters:
                    branches:
                      only:
                        - staging
            - deploy_comply_advantage_production:
                requires:
                  - e2e_comply_advantage
                  - unit_comply_advantage
                filters:
                    branches:
                        only:
                          - master
    creditsafe:
        jobs:
            - set_integration_creditsafe
            - build_creditsafe:
                requires:
                    - set_integration_creditsafe
            - unit_creditsafe:
                requires:
                    - build_creditsafe
            - deploy_creditsafe_staging:
                requires:
                    - unit_creditsafe
                filters:
                    branches:
                        only:
                            - staging
            - deploy_creditsafe_production:
                requires:
                    - unit_creditsafe
                filters:
                    branches:
                        only:
                            - master
    duedil:
        jobs:
            - set_integration_duedil
            - build_duedil:
                requires:
                  - set_integration_duedil
            - unit_duedil:
                requires:
                  - build_duedil
            - e2e_duedil:
                requires:
                  - build_duedil
            - deploy_duedil_staging:
                requires:
                  - e2e_duedil
                  - unit_duedil
                filters:
                    branches:
                        only:
                          - staging
            - deploy_duedil_production:
                requires:
                  - e2e_duedil
                  - unit_duedil
                filters:
                    branches:
                        only:
                          - master

    equifax:
        jobs:
            - set_integration_equifax
            - build_equifax:
                requires:
                  - set_integration_equifax
            - unit_equifax:
                requires:
                  - build_equifax
            - e2e_equifax:
                requires:
                  - build_equifax
            - deploy_equifax_staging:
                requires:
                  - unit_equifax
                  - e2e_equifax
                filters:
                    branches:
                        only:
                            - staging
            - deploy_equifax_production:
                requires:
                   - unit_equifax
                   - e2e_equifax
                filters:
                    branches:
                        only:
                            - master

    onfido:
        jobs:
            - set_integration_onfido
            - build_onfido:
                requires:
                  - set_integration_onfido
            - unit_onfido:
                requires:
                  - build_onfido
            - e2e_onfido:
                requires:
                  - build_onfido
            - deploy_onfido_staging:
                requires:
                  - e2e_onfido
                  - unit_onfido
                filters:
                    branches:
                        only:
                          - staging
            - deploy_onfido_production:
                requires:
                  - e2e_onfido
                  - unit_onfido
                filters:
                    branches:
                        only:
                          - master

    vsure:
        jobs:
            - set_integration_vsure
            - build_vsure:
                requires:
                  - set_integration_vsure
            - unit_vsure:
                requires:
                  - build_vsure
            - e2e_vsure:
                requires:
                  - build_vsure
            - deploy_vsure_staging:
                requires:
                  - e2e_vsure
                  - unit_vsure
                filters:
                    branches:
                        only:
                          - staging
            - deploy_vsure_production:
                requires:
                  - e2e_vsure
                  - unit_vsure
                filters:
                  branches:
                      only:
                        - master

    bvd:
        jobs:
            - set_integration_bvd
            - build_bvd:
                requires:
                  - set_integration_bvd
            - unit_bvd:
                requires:
                  - build_bvd
            - e2e_bvd:
                requires:
                  - build_bvd
            - deploy_bvd_staging:
                requires:
                  - e2e_bvd
                  - unit_bvd
                filters:
                    branches:
                        only:
                          - staging
            - deploy_bvd_production:
                requires:
                  - e2e_bvd
                  - unit_bvd
                filters:
                    branches:
                        only:
                          - master

    worldcheck:
        jobs:
            - set_integration_worldcheck
            - build_worldcheck:
                requires:
                  - set_integration_worldcheck
            - unit_worldcheck:
                requires:
                  - build_worldcheck
            - e2e_worldcheck:
                requires:
                  - build_worldcheck
            - deploy_worldcheck_staging:
                requires:
                  - e2e_worldcheck
                  - unit_worldcheck
                filters:
                    branches:
                        only:
                          - staging
            - deploy_worldcheck_production:
                requires:
                  - e2e_worldcheck
                  - unit_worldcheck
                filters:
                    branches:
                        only:
                          - master

    trulioo:
        jobs:
            - set_integration_trulioo
            - build_trulioo:
                requires:
                  - set_integration_trulioo
            - unit_trulioo:
                requires:
                  - build_trulioo
            - deploy_trulioo_staging:
                requires:
                  - unit_trulioo
                filters:
                    branches:
                        only:
                          - staging
            - deploy_trulioo_production:
                requires:
                  - unit_trulioo
                filters:
                    branches:
                        only:
                          - master
